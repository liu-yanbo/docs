const e=JSON.parse('{"key":"v-e68fe37c","path":"/java/oop/oop-polymorphism.html","title":"","lang":"zh-CN","frontmatter":{"0":"t","1":"i","2":"t","3":"l","4":"e","5":"：","6":"J","7":"a","8":"v","9":"a","10":" ","11":"面","12":"向","13":"对","14":"象","15":" ","16":"-","17":" ","18":"多","19":"态","description":"面向对象特征当中最让初学者头疼的就算是“多态”了🤦‍♂️。“封装”、“继承”的概念大家在生活中还多多少少接触过，还能够做一定层度上的类推，但“多态”这个非生活用词就显得比较陌生了。 “多态”的用途和表现形式又非常多，总是在程序设计与开发中出现，弄得的大家不知所措。这儿也是多态，那儿也是多态，那么多态到底是个啥呢？😭 什么是多态 多态的概念： 多态（...","head":[["meta",{"property":"og:url","content":"https://liu-yanbo.github.io/java/oop/oop-polymorphism.html"}],["meta",{"property":"og:site_name","content":"橘涂拾捌的wiki"}],["meta",{"property":"og:description","content":"面向对象特征当中最让初学者头疼的就算是“多态”了🤦‍♂️。“封装”、“继承”的概念大家在生活中还多多少少接触过，还能够做一定层度上的类推，但“多态”这个非生活用词就显得比较陌生了。 “多态”的用途和表现形式又非常多，总是在程序设计与开发中出现，弄得的大家不知所措。这儿也是多态，那儿也是多态，那么多态到底是个啥呢？😭 什么是多态 多态的概念： 多态（..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-09T14:29:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-09T14:29:07.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"什么是多态","slug":"什么是多态","link":"#什么是多态","children":[{"level":3,"title":"多态的概念：","slug":"多态的概念","link":"#多态的概念","children":[]},{"level":3,"title":"多态在面向对象中的地位","slug":"多态在面向对象中的地位","link":"#多态在面向对象中的地位","children":[]},{"level":3,"title":"多态的分类","slug":"多态的分类","link":"#多态的分类","children":[]}]},{"level":2,"title":"静态多态","slug":"静态多态","link":"#静态多态","children":[{"level":3,"title":"方法的重载","slug":"方法的重载","link":"#方法的重载","children":[]},{"level":3,"title":"方法的重写","slug":"方法的重写","link":"#方法的重写","children":[]}]},{"level":2,"title":"动态多态","slug":"动态多态","link":"#动态多态","children":[{"level":3,"title":"父类的引用指向子类的对象","slug":"父类的引用指向子类的对象","link":"#父类的引用指向子类的对象","children":[]},{"level":3,"title":"动态绑定与重写","slug":"动态绑定与重写","link":"#动态绑定与重写","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1673274547000,"updatedTime":1673274547000,"contributors":[{"name":"liuyanbo","email":"liuyanbo@ipplus360.com","commits":1}]},"readingTime":{"minutes":11.04,"words":3311},"autoDesc":true,"localizedDate":"2023年1月9日","filePathRelative":"java/oop/oop-polymorphism.md"}');export{e as data};
